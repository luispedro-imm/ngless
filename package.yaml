name:           NGLess
version:        '1.5.0'
category:       Domain Specific Language
description:    'NGLess implements a domain-specific language for processing next generation data, particularly metagenomics.'
synopsis:       'NGLess implements ngless, a DSL for processing sequencing data'
author:         Luis Pedro Coelho and others (see AUTHORS)
maintainer:     luis@luispedro.org
github:         ngless-toolkit/ngless
license:        MIT
license-file:   COPYING
language: GHC2021
c-sources:
  - NGLess/Dependencies/embedded.c
  - NGLess/Data/FastQ.c
default-extensions:
  - OverloadedStrings
  - LambdaCase
  - MultiWayIf
other-extensions:
  - DeriveDataTypeable
  - TemplateHaskell
dependencies:
  - aeson >=0.9
  - ansi-terminal
  - async
  - atomic-write >=0.2
  - base >= 4.12 && < 4.20
  - bytestring
  - bytestring-lexing
  - optparse-applicative
  - conduit >= 1.3
  - conduit-algorithms >=0.0.9.0
  - conduit-extra >=1.1.12
  - configurator
  - containers
  - convertible
  - data-default
  - deepseq >=1.3
  - directory
  - edit-distance >=0.2
  - either
  - errors >=2.1
  - extra >=1.4
  - exceptions
  - filemanip >=0.3.6
  - filepath >=1.3
  - file-embed >=0.0.8
  - hashable
  - hashtables
  - hostname
  - http-conduit
  - http-client
  - inline-c
  - inline-c-cpp
  - int-interval-map
  - mtl >=2.2
  - MissingH >=1.3
  - network
  - parsec >=3.1
  - primitive >=0.6
  - process >=1.2.3
  - regex
  - safe
  - strict
  - stm
  - stm-chans
  - stm-conduit >=2.7
  - random-shuffle
  - resourcet >=1.1
  - tar >=0.5
  - template-haskell
  - text >=1.2
  - time >=1.5
  - transformers
  - tar-conduit >= 0.3.2
  - unix-compat
  - unliftio-core
  - unliftio
  - vector >=0.11
  - vector-algorithms
  - yaml
  - zlib

extra-source-files:
  - README.md
  - ChangeLog
  - Html/*
  - NGLess/Interpretation/Count/RefSeqInfoVector.h
  - test_samples/sample.sam.gz
  - test_samples/data_set_repeated.fq
  - test_samples/very_short.gtf
  - Makefile


ghc-options:
  - -Wall
  - -Wcompat
  - -fwarn-tabs
  - -fno-warn-missing-signatures
  - -O2
  - -fno-full-laziness

when:
  - condition: ! 'os(windows)'
    then:
     cpp-options: -DWINDOWS
     dependencies:
     - atomic-write
    else:
     dependencies:
     - bzlib-conduit
     - double-conversion
     - safeio >=0.0.2
     - unix


library:
  source-dirs: NGLess/
  when:
    - condition: 'flag(static)'
      ld-options:
        - -static
        - -pthread

executables:
  ngless:
    main: Main.hs
    source-dirs: Execs
    other-modules: []
    ghc-options:
      - -threaded
      - -rtsopts
      - ! '"-with-rtsopts=-A64m -n4m -H"'
    dependencies:
        - NGLess
    when:
      - condition: 'flag(static)'
        ld-options:
          - -static
          - -pthread
      - condition: 'flag(embed)'
        cc-options: -DBUILD_W_EMBED
        cpp-options: -DBUILD_W_EMBED

tests:
  nglesstest:
    main: Tests.hs
    source-dirs:
        - NGLess # We cannot depend on NGLess because we compile with -DIS_BUILDING_TEST
        - Tests-Src/
    cpp-options: -DIS_BUILDING_TEST
    dependencies:
    - HUnit >=1.3
    - QuickCheck >=2.8
    - tasty
    - tasty-hunit
    - tasty-quickcheck
    - tasty-th

benchmarks:
  nglessbench:
    main: Bench.hs
    source-dirs: Execs/
    other-modules: []
    dependencies:
    - NGLess
    - HUnit >=1.3
    - criterion
flags:
  static:
    description: Static build
    manual: false
    default: false
  embed:
    description: Embed dependencies
    manual: false
    default: false
